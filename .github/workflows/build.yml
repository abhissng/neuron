name: Build and Push Neuron Base Image

on:
  push:
    branches: [ main ]
    paths:
      - 'dockerfile'
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/neuron-base

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required to get all tags

      - name: Get latest tag or default to 1.0.0
        id: get_version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null)
          if [[ -z "$latest_tag" ]]; then
            echo "::set-output name=version::1.0.0" # Default if no tags exist
          else
            version=$(echo "$latest_tag" | sed 's/^v//') # remove the leading v if it exists
            echo "::set-output name=version::$version"
          fi

      - name: Get Neuron Latest Tag
        id: get_neuron_tag
        run: |
          neuron_tag=$(git ls-remote --tags --sort=-v 'https://github.com/abhissng/neuron.git' | grep -o 'refs/tags/.*' | sed 's/refs\/tags\///' | head -n 1)
          if [[ -n "$neuron_tag" ]]; then
            echo "::set-output name=neuron_tag::$neuron_tag"
          else
            echo "::set-output name=neuron_tag::latest" # Default if no tag
          fi

      - name: Get Core-Structures Latest Tag
        id: get_core_tag
        run: |
          core_tag=$(git ls-remote --tags --sort=-v 'https://github.com/abhissng/core-structures.git' | grep -o 'refs/tags/.*' | sed 's/refs\/tags\///' | head -n 1)
          if [[ -n "$core_tag" ]]; then
            echo "::set-output name=core_tag::$core_tag"
          else
            echo "::set-output name=core_tag::latest" # Default if no tag
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push neuron-base image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          build-args: |
            NEURON_TAG=${{ steps.get_neuron_tag.outputs.neuron_tag }}
            CORE_TAG=${{ steps.get_core_tag.outputs.core_tag }}
            GITHUB_TOKEN=${{ secrets.PERSONAL_TOKEN }}